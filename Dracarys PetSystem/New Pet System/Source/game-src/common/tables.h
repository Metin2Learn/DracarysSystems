# Search

} TPlayerItem;

# Add before

#ifdef ENABLE_NEW_NAME_ITEM
	char	name[ITEM_NAME_MAX_LEN+1];
#endif

# Add

#ifdef ENABLE_NEW_PET_SYSTEM
enum EPetOptions
{
	EPetOption_Followable = 1 << 0,
	EPetOption_Mountable = 1 << 1,
	EPetOption_Summonable = 1 << 2,
	EPetOption_Combatable = 1 << 3,
};
enum m_petMisc {
	NORMAL_PET,
	NORMAL_LEVEL_PET,
};
enum EPetPointTypes
{
	POINT_PET_DURATION = 0,
	POINT_PET_LEVEL = 1,
	POINT_PET_EXP = 2,
	POINT_PET_EVOLVE = 3,
	POINT_PET_SKILLCOUNT = 4,

	POINT_PET_BONUS_1 = 5,
	POINT_PET_BONUS_2 = 6,
	POINT_PET_BONUS_3 = 7,
	

	POINT_PET_SKILL_INDEX_1 = 100,
	POINT_PET_SKILL_INDEX_2,
	POINT_PET_SKILL_INDEX_3,
	POINT_PET_SKILL_INDEX_4,
	POINT_PET_SKILL_INDEX_5,
	POINT_PET_SKILL_INDEX_6,
	POINT_PET_SKILL_INDEX_7,
	POINT_PET_SKILL_INDEX_8,
	POINT_PET_SKILL_INDEX_9,
	POINT_PET_SKILL_INDEX_10,
	POINT_PET_SKILL_INDEX_11,
	POINT_PET_SKILL_INDEX_12,
	POINT_PET_SKILL_INDEX_13,
	POINT_PET_SKILL_INDEX_14,
	POINT_PET_SKILL_INDEX_15 = 114,

	POINT_PET_SKILL_LEVEL_1 = 150,
	POINT_PET_SKILL_LEVEL_2,
	POINT_PET_SKILL_LEVEL_3,
	POINT_PET_SKILL_LEVEL_4,
	POINT_PET_SKILL_LEVEL_5,
	POINT_PET_SKILL_LEVEL_6,
	POINT_PET_SKILL_LEVEL_7,
	POINT_PET_SKILL_LEVEL_8,
	POINT_PET_SKILL_LEVEL_9,
	POINT_PET_SKILL_LEVEL_10,
	POINT_PET_SKILL_LEVEL_11,
	POINT_PET_SKILL_LEVEL_12,
	POINT_PET_SKILL_LEVEL_13,
	POINT_PET_SKILL_LEVEL_14,
	POINT_PET_SKILL_LEVEL_15 = 164,
};
typedef struct SPetApply
{
	BYTE bType;
	long lValue;
} TPetApply;

typedef struct SPetSkill
{
	BYTE bType;
	short sLevel;
} TPetSkill;
#endif
